/*
 WebkitAudioContext-patch
 https://github.com/meszaros-lajos-gyorgy/webkitAudioContext-patch
 License: MIT
*/
!(function () { 'use strict'; var a = !1; try { a = navigator.userAgent.match(/Firefox\/([\d.]+)/)[1].split('.').map(function (a) { return parseInt(a) }) } catch (a) {} if (!window.hasOwnProperty('AudioContext') && window.hasOwnProperty('webkitAudioContext')) { var b = window.AudioContext = window.webkitAudioContext; b.prototype.hasOwnProperty('createGain') || (b.prototype.createGain = b.prototype.createGainNode), OscillatorNode.prototype.hasOwnProperty('start') || (OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn), OscillatorNode.prototype.hasOwnProperty('stop') || (OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff), Object.defineProperty(OscillatorNode.prototype, 'type', { get: function () { return ['sine', 'square', 'sawtooth', 'triangle', 'custom'][this._type] }, set: function (a) { this._type = OscillatorNode.prototype[a.toUpperCase()] } }) } if (a !== !1 && a[0] < 30) { var c = OscillatorNode.prototype.start; OscillatorNode.prototype.start = function (a) { c(a || 0) }; var d = OscillatorNode.prototype.stop; OscillatorNode.prototype.stop = function (a) { d(a || 0) } } }())
